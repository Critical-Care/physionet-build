#!/bin/bash

set -e

install_dir=/physionet/physionet-build
working_dir=/physionet/physionet-build.new
venv_dir=/physionet/python-env/physionet
log_file=/physionet/update.log
branch=$(cat /physionet/deploy-branch) # production or staging

while read -r old new refname; do
    if [ "$refname" = "refs/heads/$branch" ]; then
        oldrev=$old
        newrev=$new
    fi
done
if [ -z "$oldrev" ] || [ -z "$newrev" ]; then
    exit
fi

################################################################

# If the following commands fail, it is too late to abort the push.
# Try to avoid doing things that might fail!

echo "$(date '+%F %T %z'): $branch: post-receive started" >> $log_file
exec 3>&1
exec &> >(tee -a $log_file)

export DJANGO_SETTINGS_MODULE=physionet.settings.$branch

. $venv_dir/bin/activate

# Unpack files into $working_dir
rm -rf $working_dir
mkdir -p $working_dir
git archive "$newrev" | tar -x -C $working_dir
ln -s $install_dir/.env $working_dir/.env

# Check what migrations should be applied
(
    cd $working_dir/physionet-django
    ./manage.py getmigrationtargets --current > OLD-TARGETS
    ./manage.py getmigrationtargets --early -v2 > EARLY-TARGETS 2>> $log_file
    ./manage.py getmigrationtargets > LATE-TARGETS
)

# Run early migrations
(
    cd $working_dir/physionet-django
    if cmp -s OLD-TARGETS EARLY-TARGETS; then
        echo "- No early migrations to apply."
    else
        echo "* Applying early migrations..."
        ./manage.py migratetargets EARLY-TARGETS --no-input |
            tee -a $log_file | grep 'Applying' >&3
        echo >> $log_file
    fi
)

echo "* Installing new static files..."
(
    cd $working_dir/physionet-django
    ./manage.py collectstatic --no-input >> $log_file
)

echo "* Installing new server code..."
GIT_WORK_TREE=$install_dir git checkout --force "$branch" 2>> $log_file

echo "* Reloading uwsgi server..."
sudo systemctl reload emperor.uwsgi.service
(
    cd $working_dir/physionet-django
    if cmp -s OLD-TARGETS LATE-TARGETS; then
        # assume that if there are no migrations, no need to restart
        # background tasks (and don't even bother showing a message)
        :
    else
        echo "* Restarting django-background-tasks..."
        sudo systemctl try-restart django-background-tasks.service
    fi
)

# Run late migrations
(
    cd $working_dir/physionet-django
    if cmp -s EARLY-TARGETS LATE-TARGETS; then
        echo "- No late migrations to apply."
    else
        echo "* Applying late migrations..."
        ./manage.py migrate --no-input |
            tee -a $log_file | grep 'Applying' >&3
    fi
)

# Check for updated configuration files
confupdate=$(
    cd $install_dir/deploy
    for subdir in common $branch; do
        ( cd $subdir; find * -type f ) | while read file; do
            if ! diff -Nu /$file $subdir/$file >&3; then
                echo "   $subdir/$file"
            fi
        done
    done
)

if [ -n "$confupdate" ]; then
    echo "Note: configuration files are out of date (see above):"
    echo "$confupdate"
fi

echo "$(date '+%F %T %z'): $branch: post-receive finished" >> $log_file
echo >> $log_file
